
@{
    ViewBag.Title = "Index";
    List<iis_web.Models.GetCharacter> characters = ViewBag.Characters;
    @model iis_web.Models.SubmitModel
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SOAP</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Term, "Search:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (characters != null && characters.Count > 0)
        {
            <div class="container-fluid d-flex flex-row m-3 gap-3">
                @foreach (iis_web.Models.GetCharacter character in characters)
                {
                    <div class="card" style="width: 18rem;">
                        <img class="card-img-top" src="@character.Image" alt="Character Image">
                        <div class="card-body">
                            <h5 class="card-title">@character.Name</h5>
                            <p class="card-text">Status: @character.Status</p>
                            <p class="card-text">Type: @if (character.Type != null) {@character.Type}</p>
                            <p class="card-text">Species: @character.Species</p>
                            <p class="card-text">Gender: @character.Gender</p>
                            <p class="card-text">Origin: @if (character.Origin != null) { @character.Origin.Name}</p>
                            <p class="card-text">Location:  @if (character.Location != null) {@character.Location.Name}</p>
                        </div>
                    </div>
                }
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-success mt-2" />
                <input type="button" value="Validate" class="btn btn-primary mt-2" onclick="onValidate()" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.2/axios.js"></script>
    <script type="text/javascript">
        function onValidate() {
            axios({
                url: '/Soap/Validate',
                method: 'get',
                contentType: 'application/json'
            })
            .then(res => {
                if (res.data === true) {
                    alert("Generated xml document is valid");
                }
                else {
                    alert("Generated xml document is invalid");
                }
            })
        }
    </script>

}